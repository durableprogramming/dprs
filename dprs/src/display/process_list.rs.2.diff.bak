3c3
<     layout::{Constraint, Direction, Layout, Rect},
---
>     layout::Rect,
5c5
<     text::{Span, Spans},
---
>     text::Span,
13,15c13,14
<     let containers = &app_state.containers;
< 
<     let items: Vec<ListItem> = containers
---
>     let items: Vec<ListItem> = app_state
>         .containers
17,38c16,33
<         .map(|c| {
<             let header = Spans::from(vec![
<                 Span::styled(&c.name, Style::default().fg(Color::Green).add_modifier(Modifier::BOLD)),
<                 Span::raw(" ("),
<                 Span::styled(&c.image, Style::default().fg(Color::Yellow)),
<                 Span::raw(")"),
<             ]);
< 
<             let status = Spans::from(vec![
<                 Span::raw("Status: "),
<                 Span::styled(&c.status, Style::default().fg(Color::Cyan)),
<             ]);
< 
<             let ip = Spans::from(vec![
<                 Span::raw("IP: "),
<                 Span::styled(&c.ip_address, Style::default().fg(Color::Blue)),
<             ]);
< 
<             let ports = Spans::from(vec![
<                 Span::raw("Ports: "),
<                 Span::styled(&c.ports, Style::default().fg(Color::Magenta)),
<             ]);
---
>         .map(|container| {
>             let status_style = if container.status.contains("Up") {
>                 Style::default().fg(Color::Green)
>             } else {
>                 Style::default().fg(Color::Red)
>             };
> 
>             let spans = vec![
>                 Span::styled(&container.name, Style::default().fg(Color::Yellow)),
>                 Span::raw(" | "),
>                 Span::styled(&container.image, Style::default().fg(Color::Blue)),
>                 Span::raw(" | "),
>                 Span::styled(&container.ip_address, Style::default().fg(Color::Cyan)),
>                 Span::raw(" | "),
>                 Span::styled(&container.ports, Style::default().fg(Color::Magenta)),
>                 Span::raw(" | "),
>                 Span::styled(&container.status, status_style),
>             ];
40,41c35
<             ListItem::new(vec![header, status, ip, ports])
<                 .style(Style::default())
---
>             ListItem::new(spans)
45c39
<     let list = List::new(items)
---
>     let containers = List::new(items)
49a44
>                 .fg(Color::White)
52c47
<         .highlight_symbol(">> ");
---
>         .highlight_symbol("> ");
54c49
<     f.render_stateful_widget(list, area, &mut app_state.list_state);
---
>     f.render_stateful_widget(containers, area, &mut app_state.list_state);
